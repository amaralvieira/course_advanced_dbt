name: 'course_advanced_dbt'
version: '1.0.0'
config-version: 2

profile: 'course_advanced_dbt'

model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

log-path: 'logs'
target-path: 'target'
packages-install-path: 'dbt_packages'

clean-targets:
  - "target"
  - "dbt_packages"

models:
  dbt_project_evaluator:
    +enabled: "{{ target.type == 'duckdb' | as_bool }}"

  course_advanced_dbt:
    +materialized: view
    #+grants:
    #  select: "{{ ['transformer', 'reporter'] if target.type == 'snowflake' else [] }}"

    staging:
      +schema: staging

    intermediate:
      +schema: intermediate

    marts:
      core:
        +schema: core_reporting
      finance:
        +schema: finance
      product:
        +schema: product

seeds:
  course_advanced_dbt:
    dbt_project_evaluator_exceptions:
      +enabled: "{{ target.type == 'duckdb' | as_bool }}"
    unit_tests:
      +database: raw
      +schema: bingeflix
      +enabled: "{{ target.type == 'duckdb' | as_bool }}"
      +tags: unit_testing

  dbt_project_evaluator:
    dbt_project_evaluator_exceptions:
      +enabled: false

on-run-start:
  - "{{ register_upstream_external_models() if target.type in ['duckdb'] }}"

on-run-end:
  - "{{ dbt_project_evaluator.print_dbt_project_evaluator_issues() if target.type in ['duckdb']  }}"
